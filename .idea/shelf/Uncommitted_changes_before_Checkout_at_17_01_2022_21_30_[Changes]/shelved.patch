Index: koszyk/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render, redirect, get_object_or_404\r\nfrom django.views.decorators.http import require_POST\r\nfrom koszyk.forms import KoszykAddProductForm\r\nfrom .koszyk import Koszyk\r\nfrom sklep.models import Product\r\n\r\n\r\n@require_POST\r\ndef koszyk_add(request, product_id):\r\n    koszyk = Koszyk(request)\r\n    product = get_object_or_404(Product, id=product_id)\r\n    form = KoszykAddProductForm(request.POST)\r\n    if form.is_valid():\r\n        cd = form.cleaned_data\r\n        koszyk.add(product=product,\r\n                   quantity=cd['quantity'],\r\n                   update_quantity=cd['update'])\r\n        return redirect('koszyk:koszyk_wyswietl')\r\n@require_POST\r\ndef koszyk_remove(request, product_id):\r\n    koszyk = Koszyk(request)\r\n    product = get_object_or_404(Product, id=product_id)\r\n    koszyk.remove(product)\r\n    return redirect('koszyk:koszyk_wyswietl')\r\n\r\ndef koszyk_wyswietl(request):\r\n    koszyk = Koszyk(request)\r\n    for item in koszyk:\r\n        item['update_quantity_form'] = KoszykAddProductForm(initial={'quantity': item['quantity'],\r\n                                                                     'update': True}) #usunac w razie w , bo brak reszty do tego\r\n    return  render(request, 'koszyk/szczegoly.html', {'koszyk':koszyk})
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/koszyk/views.py b/koszyk/views.py
--- a/koszyk/views.py	(revision 322eeb05869423dae85e15140ade0869c9a107b4)
+++ b/koszyk/views.py	(date 1642451077538)
@@ -16,6 +16,7 @@
                    quantity=cd['quantity'],
                    update_quantity=cd['update'])
         return redirect('koszyk:koszyk_wyswietl')
+
 @require_POST
 def koszyk_remove(request, product_id):
     koszyk = Koszyk(request)
@@ -28,4 +29,4 @@
     for item in koszyk:
         item['update_quantity_form'] = KoszykAddProductForm(initial={'quantity': item['quantity'],
                                                                      'update': True}) #usunac w razie w , bo brak reszty do tego
-    return  render(request, 'koszyk/szczegoly.html', {'koszyk':koszyk})
\ No newline at end of file
+    return render(request, 'koszyk/szczegoly.html', {'koszyk':koszyk})
\ No newline at end of file
Index: sklep/templates/sklep/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% load static %}\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>{% block title %}Mój sklep{% endblock %}</title>\r\n    <link href=\"{%static \"css/base.css\" %}\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n<div id=\"header\">\r\n    <a href=\"/\" class=\"logo\">Mój sklep</a>\r\n</div>\r\n<div id=\"subheader\">\r\n    <div class=\"koszyk\">\r\n        {% with total_items=cart|length %}\r\n          {% if total_items > 0 %}\r\n            Twój koszyk:\r\n            <a href=\"{% url \"koszyk:koszyk_wyswietl\" %}\">\r\n              {{ total_items }} item{{ total_items|pluralize }},\r\n              ${{ cart.get_total_price }}\r\n            </a>\r\n          {% else %}\r\n            Twój koszyk jest pusty.\r\n          {% endif %}\r\n        {% endwith %}\r\n    </div>\r\n</div>\r\n<div id=\"content\">\r\n    {% block content %}\r\n    {% endblock %}\r\n</div>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/sklep/templates/sklep/index.html b/sklep/templates/sklep/index.html
--- a/sklep/templates/sklep/index.html	(revision 322eeb05869423dae85e15140ade0869c9a107b4)
+++ b/sklep/templates/sklep/index.html	(date 1642451077541)
@@ -4,7 +4,7 @@
 <head>
     <meta charset="UTF-8">
     <title>{% block title %}Mój sklep{% endblock %}</title>
-    <link href="{%static "css/base.css" %}" rel="stylesheet">
+    <link href="{% static "css/base.css" %}" rel="stylesheet">
 </head>
 <body>
 <div id="header">
Index: sklep/templates/sklep/produkty/szczegoly.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"sklep.index.html\" %}\r\n{% load static %}\r\n\r\n{% block title %}\r\n  {{ product.name }}\r\n<!-- {% if category %}{{ category.title }}{% else %}Produkty{% endif %} -->\r\n{% endblock %}\r\n\r\n{% block content %}\r\n  <div class=\"product-detail\">\r\n    <img src=\"{% if product.image %}{{ product.image.url }}{% else %}\r\n    {% static \"obrazy/brak_zdjecia.png\" %}{% endif %}\">\r\n    <h1>{{ product.name }}</h1>\r\n    <h2>\r\n      <a href=\"{{ product.category.get_absolute_url }}\">\r\n        {{ product.category }}\r\n      </a>\r\n    </h2>\r\n    <p class=\"price\">${{ product.price }}</p>\r\n    <form action=\"{% url \"koszyk:koszyk_add\" product.id %}\" method=\"post\">\r\n      {{ koszyk_product_form }}\r\n      {% csrf_token %}\r\n      <input type=\"submit\" value=\"Dodaj do koszyka\">\r\n    </form>\r\n    {{ product.description|linebreaks }}\r\n  </div>\r\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/sklep/templates/sklep/produkty/szczegoly.html b/sklep/templates/sklep/produkty/szczegoly.html
--- a/sklep/templates/sklep/produkty/szczegoly.html	(revision 322eeb05869423dae85e15140ade0869c9a107b4)
+++ b/sklep/templates/sklep/produkty/szczegoly.html	(date 1642451077544)
@@ -3,7 +3,7 @@
 
 {% block title %}
   {{ product.name }}
-<!-- {% if category %}{{ category.title }}{% else %}Produkty{% endif %} -->
+ {% if category %}{{ category.title }}{% else %}Produkty{% endif %}
 {% endblock %}
 
 {% block content %}
Index: zamowienia/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render\r\nfrom .models import OrderItem\r\nfrom .forms import OrderCreateForm\r\nfrom koszyk.koszyk import Koszyk\r\n\r\n\r\ndef order_create(request):\r\n    koszyk = Koszyk(request)\r\n    if request.method == 'POST':\r\n        form = OrderCreateForm(request.POST)\r\n    if form.is_valid():\r\n        order = form.save()\r\n    for item in koszyk:\r\n        OrderItem.objects.create(order=order,\r\n                                 product=item['product'],\r\n                                 price=item['price'],\r\n                                 quantity=item['quantity'])\r\n    # Usunięcie zawartości koszyka na zakupy.\r\n        koszyk.clear()\r\n    # zmienna koszyk, jak nie działa to zmienić na plik koszyk\r\n\r\n        return render(request,\r\n                      'zamowienia/zamowienie/utworzone.html',\r\n                      {'order': order})\r\n    else:\r\n        form = OrderCreateForm()\r\n    return render(request,\r\n                    'zamowienia/zamowienie/utworz.html',\r\n                    {'koszyk': koszyk, 'form': form})\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/zamowienia/views.py b/zamowienia/views.py
--- a/zamowienia/views.py	(revision 322eeb05869423dae85e15140ade0869c9a107b4)
+++ b/zamowienia/views.py	(date 1642451077553)
@@ -8,20 +8,20 @@
     koszyk = Koszyk(request)
     if request.method == 'POST':
         form = OrderCreateForm(request.POST)
-    if form.is_valid():
-        order = form.save()
-    for item in koszyk:
-        OrderItem.objects.create(order=order,
-                                 product=item['product'],
-                                 price=item['price'],
-                                 quantity=item['quantity'])
-    # Usunięcie zawartości koszyka na zakupy.
-        koszyk.clear()
-    # zmienna koszyk, jak nie działa to zmienić na plik koszyk
-
-        return render(request,
-                      'zamowienia/zamowienie/utworzone.html',
-                      {'order': order})
+        if form.is_valid():
+            order = form.save()
+            for item in koszyk:
+                OrderItem.objects.create(order=order,
+                                         product=item['product'],
+                                         price=item['price'],
+                                         quantity=item['quantity'])
+            # Usunięcie zawartości koszyka na zakupy.
+            koszyk.clear()
+            # zmienna koszyk, jak nie działa to zmienić na plik koszyk
+            #order_created.delay(order.id)
+            return render(request,
+                          'zamowienia/zamowienie/utworzone.html',
+                          {'order': order})
     else:
         form = OrderCreateForm()
     return render(request,
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.9\" project-jdk-type=\"Python SDK\" />\r\n  <component name=\"PyCharmProfessionalAdvertiser\">\r\n    <option name=\"shown\" value=\"true\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 322eeb05869423dae85e15140ade0869c9a107b4)
+++ b/.idea/misc.xml	(date 1642451077431)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.9" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8 (sklep_internetowy)" project-jdk-type="Python SDK" />
   <component name="PyCharmProfessionalAdvertiser">
     <option name="shown" value="true" />
   </component>
Index: .idea/sklep_internetowy.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <excludeFolder url=\"file://$MODULE_DIR$/venv\" />\r\n    </content>\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.9\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/sklep_internetowy.iml b/.idea/sklep_internetowy.iml
--- a/.idea/sklep_internetowy.iml	(revision 322eeb05869423dae85e15140ade0869c9a107b4)
+++ b/.idea/sklep_internetowy.iml	(date 1642451077432)
@@ -4,7 +4,7 @@
     <content url="file://$MODULE_DIR$">
       <excludeFolder url="file://$MODULE_DIR$/venv" />
     </content>
-    <orderEntry type="jdk" jdkName="Python 3.9" jdkType="Python SDK" />
+    <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: zamowienia/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib import admin\r\nfrom .models import Zamowienia, OrderItem\r\n\r\n\r\nclass OrderItemInline(admin.TabularInline):\r\n    model = OrderItem\r\n    raw_id_fields = ['product']\r\n\r\n@admin.register(Zamowienia)\r\nclass OrderAdmin(admin.ModelAdmin):\r\n    list_display = ['id', 'imie', 'nazwisko', 'email',\r\n                    'adres', 'kod_pocztowy', 'miasto', 'platnosc',\r\n                    'utworzono', 'zaktualizowano']\r\n    list_filter = ['platnosc', 'utworzono', 'zaktualizowano']\r\n    inlines = [OrderItemInline]\r\n\r\n\r\n#admin.site.register(Zamowienia, OrderAdmin)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/zamowienia/admin.py b/zamowienia/admin.py
--- a/zamowienia/admin.py	(revision 322eeb05869423dae85e15140ade0869c9a107b4)
+++ b/zamowienia/admin.py	(date 1642451077548)
@@ -15,4 +15,5 @@
     inlines = [OrderItemInline]
 
 
+
 #admin.site.register(Zamowienia, OrderAdmin)
Index: zamowienia/templates/zamowienia/zamowienie/utworz.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"sklep/index.html\" %}\r\n\r\n{% block title %}\r\n  Checkout\r\n{% endblock %}\r\n\r\n{% block content %}\r\n  <h1>Checkout</h1>\r\n\r\n  <div class=\"order-info\">\r\n    <h3>Twoje zamówienie</h3>\r\n    <ul>\r\n      {% for item in cart %}\r\n        <li>\r\n          {{ item.quantity }}x {{ item.product.name }}\r\n          <span>${{ item.total_price }}</span>\r\n        </li>\r\n      {% endfor %}\r\n    </ul>\r\n    <p>Suma: ${{ cart.get_total_price }}</p>\r\n  </div>\r\n\r\n  <form method=\"post\" class=\"order-form\">\r\n    {{ form.as_p }}\r\n    <p><input type=\"submit\" value=\"Place order\"></p>\r\n    {% csrf_token %}\r\n  </form>\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/zamowienia/templates/zamowienia/zamowienie/utworz.html b/zamowienia/templates/zamowienia/zamowienie/utworz.html
--- a/zamowienia/templates/zamowienia/zamowienie/utworz.html	(revision 322eeb05869423dae85e15140ade0869c9a107b4)
+++ b/zamowienia/templates/zamowienia/zamowienie/utworz.html	(date 1642451077550)
@@ -22,7 +22,7 @@
 
   <form method="post" class="order-form">
     {{ form.as_p }}
-    <p><input type="submit" value="Place order"></p>
+    <p><input type="submit" value="Złóż zamówienie"></p>
     {% csrf_token %}
   </form>
 {% endblock %}
